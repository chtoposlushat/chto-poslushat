const express = require('express');
const cors = require('cors');
const app = express();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –ø–∞–º—è—Ç–∏)
let tasks = [
  { id: 1, text: "–ò–∑—É—á–∏—Ç—å React" },
  { id: 2, text: "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Express" }
];

// Middleware
app.use(cors());
app.use(express.json()); // –í–∞–∂–Ω–æ! –ü–æ–∑–≤–æ–ª—è–µ—Ç —á–∏—Ç–∞—Ç—å JSON –∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤

// GET-–∑–∞–ø—Ä–æ—Å (—É–∂–µ –µ—Å—Ç—å)
app.get('/api/tasks', (req, res) => {
  res.json({ tasks });
});

// üëá –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π POST-–∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á
app.post('/api/tasks', (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
  if (!req.body.text || typeof req.body.text !== 'string') {
    return res.status(400).json({ 
      error: '–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π' 
    });
  }

  // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É
  const newTask = {
    id: Date.now(),
    text: req.body.text.trim() // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
  };
  
  tasks.push(newTask);
  res.status(201).json(newTask);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(3000, () => console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000'));
import connectDB from './db.js';
import Review from './models/Review.js';

// –ü–æ—Å–ª–µ app.use(cors());
connectDB();

// –¢–µ—Å—Ç–æ–≤—ã–π —Ä–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get('/api/test-reviews', async (req, res) => {
  const testReview = new Review({
    title: "–¢–µ—Å—Ç–æ–≤—ã–π –æ–±–∑–æ—Ä",
    artist: "–ì—Ä—É–ø–ø–∞ –ü—Ä–∏–º–µ—Ä",
    genre: "—Ä–æ–∫",
    content: "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±–∑–æ—Ä–∞...",
    constructiveScore: 85
  });
  await testReview.save();
  res.json(testReview);
});
